<script>
	//is element completely visible
	function isElementInViewport (el) {
		var rect = el.getBoundingClientRect();

		return (
			rect.top >= 0 &&
			rect.left >= 0 &&
			rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */
			rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */
		);		
	}

	//Finds y value of given object
	function findPos(obj) {
		var curtop = 0;
		if (obj.offsetParent) {
			do {
				curtop += obj.offsetTop;
			} while (obj = obj.offsetParent);
			return [curtop];
		}
	}

	function getMaxSongElementIndex() {
		var counter = 1;
		while (true)
		{
			var elementToCheck = document.getElementById('SongElement' + counter);
			if (elementToCheck == null)
				return counter-1;
			counter++;
		}
	}
	
	//check if songelement full visible on the screen
	function isSongElementCompletelyVisible(index) {
		var elementToCheck = document.getElementById('SongElement' + index);
		var isVisible = isElementInViewport(elementToCheck);
		return isVisible
	}

	//check if songelement fully invisible
	function isSongElementCompletelyInvisible(index) {
		return !isSongElementCompletelyVisible(index);
	}
	
	//index of the first element in the song that is visible on the screen
	function getFirstVisibleSongElementIndex() {
		var maxSongElementCount = getMaxSongElementIndex();
		for (i = 1; i <= maxSongElementCount; i++)  
		{
			if (isSongElementCompletelyVisible(i))
				return i;
		}
	}

	function findFirstOffScreenElementIndex() {
		var maxSongElementCount = getMaxSongElementIndex();
		var indexOfFirstVisibleElement = getFirstVisibleSongElementIndex();
		for (i = indexOfFirstVisibleElement; i <= maxSongElementCount; i++) 
		{
			if (isSongElementCompletelyVisible(i) == false)
				return i;
		
		}
	}

	//scroll to song element in index
	function scrollToSongElement(index)
	{
		var y = findPos(document.getElementById('SongElement' + index)) - 1;
		window.scroll(0,y);
	}

	//scroll down by one screen
	function scrollDown() {
		var firstOffScreenElementIndex = findFirstOffScreenElementIndex();
		if (firstOffScreenElementIndex != null) {
			scrollToSongElement(firstOffScreenElementIndex);
		}
	}

	//scroll up by one screen
	function scrollUp()
	{
	    oldFirstVisible = getFirstVisibleSongElementIndex();
		newCurrentElement = oldFirstVisible;
		while (newCurrentElement > 1)
		{
			newCurrentElement--;
			scrollToSongElement(newCurrentElement);
			if (isSongElementCompletelyInvisible(oldFirstVisible)) return;
		}
	}

	//add keyboard binding
	document.addEventListener("keydown", keyDownInWindow, false);
	function keyDownInWindow(e) {
		if (e.keyCode == 32 || e.keyCode == 40) //if spacebar or down arrow
		{
			scrollDown();
			e.preventDefault(); //swallow the event
		}
		else if (e.keyCode == 38) //if up arrow is pressed
		{
			scrollUp();
			e.preventDefault(); //swallow the event
		}
		else if (e.keyCode == 116) //swallow f5 key presses
		{
			e.preventDefault(); //swallow the event
		}
	}

	function getBaseUrl() {
		var pathArray = location.href.split( '/' );
		var protocol = pathArray[0];
		var host = pathArray[2];
		var url = protocol + '//' + host;
		return url
	}

	//call ajax to url and return text
	function callAjax(url, callback) {
			var xmlhttp;
			var currentHostSongName;
			// compatible with IE7+, Firefox, Chrome, Opera, Safari
			xmlhttp = new XMLHttpRequest();
			xmlhttp.onreadystatechange = function() {
				if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
					callback(xmlhttp);
				}
			}
			xmlhttp.open("GET",getBaseUrl() + url, true);
			xmlhttp.send();
			return currentHostSongName;
	}

	function compareHostSongAndCurrentSongAsync_Complete(xmlHttpResult) 
	{
		//current song name 
		var currentSongName = document.getElementById('SongName').value;
		//host song name
		var hostSongName = xmlHttpResult.responseText;
		//if they are different reload the song
		if (currentSongName !== hostSongName)
		{
			//reload page and scroll to top of page
			location.reload(true);
			document.body.scrollTop = document.documentElement.scrollTop = 0;
		}
	}

	//compare host song and current song asynchonously
	function compareHostSongAndCurrentSongAsync() {
		callAjax('/SongName', compareHostSongAndCurrentSongAsync_Complete);
	}

    //check for song change every x milliseconds
	<%EnableAutoRefresh%>var timeout = setInterval(compareHostSongAndCurrentSongAsync, 1000);
</script>